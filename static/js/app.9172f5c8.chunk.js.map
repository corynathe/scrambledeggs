{"version":3,"sources":["styles.ts","App.tsx"],"names":["STYLES","StyleSheet","create","container","height","backgroundColor","north","alignItems","justifyContent","center","south","title","fontSize","fontFamily","paddingTop","optioonsDisplay","optionsTitle","optionsGameTitle","row","flexDirection","spaced","marginTop","marginBottom","cell","padding","levelSelected","fontWeight","levelUnselected","color","button","borderRadius","elevation","buttonText","textTransform","centeredView","flex","modalView","margin","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","DIFFICULTY_LEVEL","rowCount","colCount","size","name","icons","COLORS","ICON_GROUP","egg","playAgain","iconContainer","type","sizeFactor","icon","penguin","book","baby","cow","ball","App","useState","game","level","colors","getRandomColors","totalCount","settings","setSettings","diffLevel","useMemo","gameInfo","rows","Array","keys","cols","fill","show","setShow","hasShow","setHasShow","correct","setCorrect","showOptionsModal","setShowOptionsModal","showNone","useCallback","force","useEffect","setTimeout","clickContainer","index","newShow","containers","newGame","resetGame","newSettings","newLevel","newTotalCount","_newSettings","toggleOptionsModal","View","style","Text","TouchableOpacity","onPress","LevelIcons","map","r","c","length","iconColor","onClick","Modal","animationType","transparent","visible","onRequestClose","Object","gameName","df","i","selected","ClickIcon","props","_onClick","NonClickIcon","FAIcon","FontAwesome","FA5Icon","FontAwesome5","MCIcon","MaterialCommunityIcons","memo","n","sort","Math","random","slice","matches","colorMatches","first","second","filter","x"],"mappings":"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","file":"static/js/app.9172f5c8.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nexport const STYLES = StyleSheet.create({\n    container: {\n        height: '100%',\n        // maxWidth: 1500,\n        backgroundColor: '#fff',\n    },\n    // over: {\n    //     // position: 'relative',\n    //     // top: 360,\n    // },\n    // under: {\n    //     // opacity: 0.7,\n    // },\n    // outline: {\n    //     // border: 'solid #777 1px',\n    //     borderRadius: 10,\n    //     padding: 10,\n    //     margin: 5,\n    //     // backgroundColor: '#fff',\n    // },\n\n    north: {\n        height: '20%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // borderBottomWidth: 1,\n    },\n    center: {\n        height: '5%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // borderBottomWidth: 1,\n    },\n    south: {\n        height: '75%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    title: {\n        fontSize: 50,\n        fontFamily: 'Papyrus',\n        paddingTop: 40,\n    },\n    optioonsDisplay: {\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n    },\n    optionsTitle: {\n        fontSize: 40,\n        fontFamily: 'Papyrus',\n    },\n    optionsGameTitle: {\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n    },\n\n    row: {\n        flexDirection: 'row',\n    },\n    spaced: {\n      marginTop: 20,\n      marginBottom: 20,\n    },\n\n    cell: {\n        padding: 10,\n        alignItems: 'center'\n    },\n\n    levelSelected: {\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n        fontWeight: 'bold',\n    },\n    levelUnselected: {\n        color: '#aaa',\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n    },\n\n    button: {\n        backgroundColor: '#92f7a8',\n        borderRadius: 10,\n        padding: 10,\n        elevation: 2,\n    },\n    buttonText: {\n        fontFamily: 'Papyrus',\n        color: '#000',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n    },\n\n    centeredView: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        // alignItems: 'center',\n        marginTop: 25,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: '#fff',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n});","import React, { FC, useCallback, useState, useMemo, useEffect, memo } from 'react';\nimport { Text, TouchableOpacity, View, Modal } from 'react-native';\nimport { FontAwesome5, FontAwesome, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n\nimport { STYLES } from './styles';\n\nconst DIFFICULTY_LEVEL = [\n  {rowCount: 2, colCount: 3, size: 90, name: 'Easy', icons: ['star', 'star-o', 'star-o']},\n  {rowCount: 4, colCount: 3, size: 60, name: 'Medium', icons: ['star', 'star', 'star-o']},\n  {rowCount: 5, colCount: 4, size: 45, name: 'Hard', icons: ['star', 'star', 'star']},\n]\nconst COLORS = [\n    'darkblue', '#92f7a8', 'magenta', '#28b59e', 'purple', 'orange', 'lightblue', 'black', 'red',\n    'maroon', 'darkgreen', 'pink', 'tan', 'grey', '#f56c42', '#42ecf5', '#14c93b', '#c996f2',\n    '#4970c4', '#785625'\n];\nconst ICON_GROUP = {\n  egg: {\n    title: 'Scrambled Eggs',\n    playAgain: 'Play Again',\n    iconContainer: {\n      type: 'FontAwesome',\n      name: 'shopping-basket',\n      sizeFactor: 1,\n    },\n    icon: {\n      type: 'MaterialCommunityIcons',\n      name: 'egg-easter',\n    }\n  },\n  penguin: {\n    title: 'Penguin Town',\n    playAgain: 'Play Again',\n    iconContainer: {\n      type: 'FontAwesome5',\n      name: 'igloo',\n      sizeFactor: 1,\n    },\n    icon: {\n      type: 'MaterialCommunityIcons',\n      name: 'penguin',\n    }\n  },\n  book: {\n    title: 'Dewey\\'s Decimals',\n    playAgain: 'Play Again',\n    iconContainer: {\n      type: 'MaterialCommunityIcons',\n      name: 'bookshelf',\n      sizeFactor: 1.25,\n    },\n    icon: {\n      type: 'FontAwesome',\n      name: 'book',\n    }\n  },\n  baby: {\n    title: 'Diaper Change',\n    playAgain: 'Play Again',\n    iconContainer: {\n      type: 'MaterialCommunityIcons',\n      name: 'baby-carriage',\n      sizeFactor: 1.25,\n    },\n    icon: {\n      type: 'FontAwesome5',\n      name: 'baby',\n    }\n  },\n  cow: {\n    title: 'Moo Moo Mixup',\n    playAgain: 'Play Again',\n    iconContainer: {\n      type: 'MaterialCommunityIcons',\n      name: 'barn',\n      sizeFactor: 1.25,\n    },\n    icon: {\n      type: 'MaterialCommunityIcons',\n      name: 'cow',\n    }\n  },\n  ball: {\n    title: 'Hoop-tastic',\n    playAgain: 'Play Again',\n    iconContainer: {\n      type: 'MaterialCommunityIcons',\n      name: 'basketball-hoop-outline',\n      sizeFactor: 1.25,\n    },\n    icon: {\n      type: 'MaterialCommunityIcons',\n      name: 'basketball',\n    }\n  },\n};\n\nconst TIMEOUT = 1500;\n\ninterface GameColors {\n  icons: string[];\n  containers: string[];\n}\n\ninterface GameSettings {\n  level: number;\n  game: string;\n  colors: GameColors;\n  totalCount: number;\n}\n\nexport default function App() {\n  const [settings, setSettings] = useState<GameSettings>({\n    game: 'egg',\n    level: 1,\n    colors: getRandomColors(COLORS, 12),\n    totalCount: 12,\n  });\n  const diffLevel = useMemo(() => DIFFICULTY_LEVEL[settings.level], [settings]);\n  const gameInfo = useMemo(() => ICON_GROUP[settings.game], [settings]);\n  const rows = useMemo(() => [...Array(diffLevel.rowCount).keys()], [diffLevel]);\n  const cols = useMemo(() => [...Array(diffLevel.colCount).keys()], [diffLevel]);\n  const [show, setShow] = useState<boolean[]>(Array(settings.totalCount).fill(false));\n  const [hasShow, setHasShow] = useState<boolean>(false);\n  const [correct, setCorrect] = useState<boolean>(false);\n  const [showOptionsModal, setShowOptionsModal] = useState<boolean>(false);\n\n  const showNone = useCallback((force?: boolean) => {\n    if (!correct || force) {\n      setHasShow(false);\n      setShow(Array(settings.totalCount).fill(false));\n    }\n  }, [correct, settings]);\n\n  const showAll = useCallback(() => {\n    setHasShow(false);\n    setShow(Array(settings.totalCount).fill(true));\n  }, [settings]);\n\n  useEffect(() => {\n    if (hasShow) {\n      setTimeout(() => showNone(), TIMEOUT);\n    }\n  }, [hasShow]);\n\n  const clickContainer = useCallback((index: number) => {\n    if (hasShow || typeof index !== 'number') return;\n\n    const newShow = [...show];\n    newShow[index] = true;\n    setShow(newShow);\n    setHasShow(true);\n\n    setCorrect(settings.colors.icons[index] === settings.colors.containers[index]);\n  }, [show, hasShow, settings]);\n\n  const newGame = useCallback(() => {\n    resetGame(settings);\n  }, [settings]);\n\n  const resetGame = useCallback((newSettings: Partial<GameSettings>) => {\n    const newLevel = newSettings.level ?? settings.level;\n    const newTotalCount = DIFFICULTY_LEVEL[newLevel].rowCount * DIFFICULTY_LEVEL[newLevel].colCount;\n    const _newSettings = {\n      ...settings,\n      ...newSettings,\n      colors: getRandomColors(COLORS, newTotalCount),\n    };\n    setSettings(_newSettings);\n    setCorrect(false);\n    showNone(true);\n  }, [settings]);\n\n  const toggleOptionsModal = useCallback(() => {\n    setShowOptionsModal(!showOptionsModal);\n  }, [showOptionsModal]);\n\n  return (\n      <View style={STYLES.container}>\n        <View style={STYLES.north}>\n          <Text style={STYLES.title}>{gameInfo.title}</Text>\n          <TouchableOpacity onPress={toggleOptionsModal}>\n            <View style={STYLES.row}>\n              <Text style={STYLES.optioonsDisplay}>\n                Type:&nbsp;&nbsp;<NonClickIcon type={gameInfo.icon.type} name={gameInfo.icon.name} color={'#000'} size={20} />\n                &nbsp;&nbsp;\n                Level:&nbsp;&nbsp;<LevelIcons icons={DIFFICULTY_LEVEL[settings.level].icons} color={'#000'} size={20} />\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={STYLES.center}>\n          {correct && (\n              <TouchableOpacity style={STYLES.button} onPress={newGame}>\n                <Text style={STYLES.buttonText}>{gameInfo.playAgain}</Text>\n              </TouchableOpacity>\n          )}\n        </View>\n        <View style={STYLES.south}>\n          {rows.map(r => {\n            return (\n                <View key={r} style={STYLES.row}>\n                  {cols.map(c => {\n                    const index = (r * cols.length) + c;\n                    const iconColor = show[index] ? settings.colors.icons[index] : 'white';\n                    return (\n                        <View key={r+''+c} style={STYLES.cell}>\n                          <NonClickIcon index={index} type={gameInfo.icon.type} name={gameInfo.icon.name} color={iconColor} size={diffLevel.size} />\n                          {correct && <NonClickIcon index={index} type={gameInfo.iconContainer.type} name={gameInfo.iconContainer.name} color={settings.colors.containers[index]} size={diffLevel.size * gameInfo.iconContainer.sizeFactor} />}\n                          {!correct && <ClickIcon index={index} onClick={clickContainer} type={gameInfo.iconContainer.type} name={gameInfo.iconContainer.name} color={settings.colors.containers[index]} size={diffLevel.size * gameInfo.iconContainer.sizeFactor} />}\n                        </View>\n                    )\n                  })}\n                </View>\n            )\n          })}\n        </View>\n        <Modal\n            animationType=\"slide\"\n            transparent={false}\n            visible={showOptionsModal}\n            onRequestClose={toggleOptionsModal}>\n          <View style={STYLES.centeredView}>\n            <View style={STYLES.modalView}>\n              <Text style={STYLES.optionsTitle}>Game Settings:</Text>\n              <View style={STYLES.spaced}>\n                {Object.keys(ICON_GROUP).map(gameName => {\n                  const gameInfo = ICON_GROUP[gameName];\n                  const style = gameName === settings.game ? STYLES.levelSelected : STYLES.levelUnselected;\n                  const iconColor = gameName === settings.game ? '#000' : '#aaa';\n                  return (\n                      <TouchableOpacity key={gameName} onPress={() => {resetGame({game: gameName})}}>\n                        <View style={STYLES.row}>\n                          <NonClickIcon type={gameInfo.icon.type} name={gameInfo.icon.name} color={iconColor} size={30} />\n                          <Text style={style}>&nbsp;&nbsp;{gameInfo.title}</Text>\n                        </View>\n                      </TouchableOpacity>\n                  )\n                })}\n              </View>\n              <View style={STYLES.spaced}>\n                {DIFFICULTY_LEVEL.map((df, i) => {\n                  const selected = settings.level === i;\n                  const style = selected ? STYLES.levelSelected : STYLES.levelUnselected;\n                  return(\n                      <TouchableOpacity key={df.name} onPress={() => {resetGame({level: i})}}>\n                        <View style={STYLES.row}>\n                          <Text style={style}>{df.name}&nbsp;&nbsp;</Text>\n                          <LevelIcons icons={df.icons} color={selected ? '#000' : '#aaa'} size={30} />\n                        </View>\n                      </TouchableOpacity>\n                  );\n                })}\n              </View>\n              <TouchableOpacity style={STYLES.button} onPress={toggleOptionsModal}>\n                <Text style={STYLES.buttonText}>DONE</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n      </View>\n  );\n}\n\ninterface IconProps {\n  index?: number;\n  name: string;\n  color: string;\n  size: number;\n  style?: any;\n  type?: string;\n  onClick?: (index: number) => void;\n}\n\nconst ClickIcon: FC<IconProps> = (props) => {\n  const { onClick } = props;\n\n  const _onClick = useCallback(() => {\n    onClick?.(props.index);\n  }, [props]);\n\n  return (\n      <TouchableOpacity onPress={_onClick}>\n        {props.type === 'FontAwesome' && <FAIcon {...props} />}\n        {props.type === 'FontAwesome5' && <FA5Icon {...props} />}\n        {props.type === 'MaterialCommunityIcons' && <MCIcon {...props} />}\n      </TouchableOpacity>\n  )\n}\n\nconst NonClickIcon: FC<IconProps> = (props) => {\n  return (\n      <>\n        {props.type === 'FontAwesome' && <FAIcon {...props} />}\n        {props.type === 'FontAwesome5' && <FA5Icon {...props} />}\n        {props.type === 'MaterialCommunityIcons' && <MCIcon {...props} />}\n      </>\n  )\n}\n\nconst FAIcon: FC<IconProps> = (props) => {\n  return (\n      <FontAwesome {...props}  />\n  )\n}\n\nconst FA5Icon: FC<IconProps> = (props) => {\n  return (\n      <FontAwesome5 {...props}  />\n  )\n}\n\nconst MCIcon: FC<IconProps> = (props) => {\n  return (\n      <MaterialCommunityIcons {...props} />\n  )\n}\n\ninterface LevelIconsProps {\n  icons: string[];\n  size: number;\n  color: string;\n}\n\nconst LevelIcons: FC<LevelIconsProps> = memo(props => {\n  const { icons, size, color } = props;\n  return (\n      <>\n        {icons.map((icon, i) => {\n          return <FAIcon key={i} name={icon} color={color} size={size} />;\n        })}\n      </>\n  )\n});\n\nconst getRandomInt = (max: number): number => {\n  return Math.floor(Math.random() * max);\n}\n\nconst getRandomColors = (colors: string[], n: number): GameColors => {\n  const icons = [...colors].sort(() => 0.5 - Math.random()).slice(0, n);\n  let containers = [...icons].sort(() => 0.5 - Math.random());\n  let matches = colorMatches(icons, containers);\n  while (matches !== 1) {\n    containers = [...icons].sort(() => 0.5 - Math.random());\n    matches = colorMatches(icons, containers);\n  }\n  return { icons, containers };\n}\n\nconst colorMatches = (first: string[], second: string[]): number => {\n  return first.filter((x, i) => x === second[i]).length;\n}\n"],"sourceRoot":""}
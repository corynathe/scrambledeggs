{"version":3,"sources":["constants.ts","styles.ts","App.tsx"],"names":["DIFFICULTY_LEVEL","rowCount","colCount","size","name","icons","COLORS","ICON_GROUP","egg","title","playAgain","iconContainer","type","sizeFactor","icon","info","penguin","book","baby","cow","ball","STYLES","StyleSheet","create","container","height","backgroundColor","north","alignItems","justifyContent","center","south","fontSize","fontFamily","color","paddingTop","infoIcon","paddingRight","gameIcon","optionsDisplay","optionsTitle","optionsGameTitle","row","flexDirection","spaced","marginTop","marginBottom","cell","padding","levelSelected","fontWeight","levelUnselected","button","borderRadius","elevation","buttonText","textTransform","centeredView","flex","modalView","margin","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","App","useState","game","level","colors","getRandomColors","totalCount","settings","setSettings","diffLevel","useMemo","gameInfo","rows","Array","keys","cols","fill","show","setShow","hasShow","setHasShow","correct","setCorrect","showOptionsModal","setShowOptionsModal","showInfoModal","setShowInfoModal","showNone","useCallback","force","useEffect","setTimeout","clickContainer","index","newShow","containers","newGame","resetGame","newSettings","newLevel","newTotalCount","_newSettings","toggleOptionsModal","toggleInfoModal","View","style","Text","TouchableOpacity","onPress","LevelIcons","map","r","c","length","iconColor","onClick","Modal","animationType","transparent","visible","onRequestClose","Object","gameName","df","i","selected","ClickIcon","props","_onClick","NonClickIcon","FAIcon","FontAwesome","FA5Icon","FontAwesome5","MCIcon","MaterialCommunityIcons","memo","n","sort","Math","random","slice","matches","colorMatches","first","second","filter","x"],"mappings":"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","file":"static/js/app.32f718c1.chunk.js","sourcesContent":["\nexport const DIFFICULTY_LEVEL = [\n    {rowCount: 2, colCount: 3, size: 90, name: 'Easy', icons: ['star', 'star-o', 'star-o']},\n    {rowCount: 4, colCount: 3, size: 60, name: 'Medium', icons: ['star', 'star', 'star-o']},\n    {rowCount: 5, colCount: 4, size: 45, name: 'Hard', icons: ['star', 'star', 'star']},\n];\n\nexport const COLORS = [\n    'darkblue', '#92f7a8', 'magenta', '#28b59e', 'purple', 'orange', 'lightblue', 'black', 'red',\n    'maroon', 'darkgreen', 'pink', 'tan', 'grey', '#f56c42', '#42ecf5', '#14c93b', '#c996f2',\n    '#4970c4', '#785625'\n];\n\nexport const ICON_GROUP = {\n    egg: {\n        title: 'Scrambled Eggs',\n        playAgain: 'Play Again',\n        iconContainer: {\n            type: 'FontAwesome',\n            name: 'shopping-basket',\n            sizeFactor: 1,\n        },\n        icon: {\n            type: 'MaterialCommunityIcons',\n            name: 'egg-easter',\n        },\n        info: 'Find the egg with the color that matches the basket.',\n    },\n    penguin: {\n        title: 'Penguin Town',\n        playAgain: 'Play Again',\n        iconContainer: {\n            type: 'FontAwesome5',\n            name: 'igloo',\n            sizeFactor: 1,\n        },\n        icon: {\n            type: 'MaterialCommunityIcons',\n            name: 'penguin',\n        },\n        info: 'Find the penguin with the color that matches the igloo.',\n    },\n    book: {\n        title: 'Dewey\\'s Decimals',\n        playAgain: 'Play Again',\n        iconContainer: {\n            type: 'MaterialCommunityIcons',\n            name: 'bookshelf',\n            sizeFactor: 1.25,\n        },\n        icon: {\n            type: 'FontAwesome',\n            name: 'book',\n        },\n        info: 'Find the book with the color that matches the shelf.',\n    },\n    baby: {\n        title: 'Diaper Change',\n        playAgain: 'Play Again',\n        iconContainer: {\n            type: 'MaterialCommunityIcons',\n            name: 'baby-carriage',\n            sizeFactor: 1.25,\n        },\n        icon: {\n            type: 'FontAwesome5',\n            name: 'baby',\n        },\n        info: 'Find the baby with the color that matches the stroller.',\n    },\n    cow: {\n        title: 'Moo Moo Mixup',\n        playAgain: 'Play Again',\n        iconContainer: {\n            type: 'MaterialCommunityIcons',\n            name: 'barn',\n            sizeFactor: 1.25,\n        },\n        icon: {\n            type: 'MaterialCommunityIcons',\n            name: 'cow',\n        },\n        info: 'Find the cow with the color that matches the barn.',\n    },\n    ball: {\n        title: 'Hoop-tastic',\n        playAgain: 'Play Again',\n        iconContainer: {\n            type: 'MaterialCommunityIcons',\n            name: 'basketball-hoop-outline',\n            sizeFactor: 1.25,\n        },\n        icon: {\n            type: 'MaterialCommunityIcons',\n            name: 'basketball',\n        },\n        info: 'Find the basketball with the color that matches the hoop.',\n    },\n};\n\nexport const TIMEOUT = 1500;","import { StyleSheet } from 'react-native';\n\nexport const STYLES = StyleSheet.create({\n    container: {\n        height: '100%',\n        backgroundColor: '#fff',\n    },\n\n    north: {\n        height: '20%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#000',\n        // borderBottomWidth: 1,\n    },\n    center: {\n        height: '5%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // backgroundColor: '#000',\n        // borderBottomWidth: 1,\n    },\n    south: {\n        height: '75%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    title: {\n        fontSize: 48,\n        fontFamily: 'Papyrus',\n        color: '#fff',\n        paddingTop: 40,\n    },\n    infoIcon: {\n        paddingRight: 100,\n    },\n    gameIcon: {\n        paddingRight: 15,\n    },\n    optionsDisplay: {\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n    },\n    optionsTitle: {\n        fontSize: 40,\n        fontFamily: 'Papyrus',\n    },\n    optionsGameTitle: {\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n    },\n    row: {\n        flexDirection: 'row',\n    },\n    spaced: {\n      marginTop: 20,\n      marginBottom: 20,\n    },\n\n    cell: {\n        padding: 10,\n        alignItems: 'center'\n    },\n\n    levelSelected: {\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n        fontWeight: 'bold',\n    },\n    levelUnselected: {\n        color: '#aaa',\n        fontSize: 25,\n        fontFamily: 'Papyrus',\n    },\n\n    button: {\n        backgroundColor: '#92f7a8',\n        borderRadius: 10,\n        padding: 10,\n        elevation: 2,\n    },\n    buttonText: {\n        fontFamily: 'Papyrus',\n        color: '#000',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n    },\n\n    centeredView: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginTop: 25,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: '#fff',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n});","import React, { FC, useCallback, useState, useMemo, useEffect, memo } from 'react';\nimport { Text, TouchableOpacity, View, Modal } from 'react-native';\nimport { FontAwesome5, FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { DIFFICULTY_LEVEL, ICON_GROUP, COLORS, TIMEOUT } from './constants';\nimport { STYLES } from './styles';\n\ninterface GameColors {\n  icons: string[];\n  containers: string[];\n}\n\ninterface GameSettings {\n  level: number;\n  game: string;\n  colors: GameColors;\n  totalCount: number;\n}\n\nexport default function App() {\n  const [settings, setSettings] = useState<GameSettings>({\n    game: 'egg',\n    level: 1,\n    colors: getRandomColors(COLORS, 12),\n    totalCount: 12,\n  });\n  const diffLevel = useMemo(() => DIFFICULTY_LEVEL[settings.level], [settings]);\n  const gameInfo = useMemo(() => ICON_GROUP[settings.game], [settings]);\n  const rows = useMemo(() => [...Array(diffLevel.rowCount).keys()], [diffLevel]);\n  const cols = useMemo(() => [...Array(diffLevel.colCount).keys()], [diffLevel]);\n  const [show, setShow] = useState<boolean[]>(Array(settings.totalCount).fill(false));\n  const [hasShow, setHasShow] = useState<boolean>(false);\n  const [correct, setCorrect] = useState<boolean>(false);\n  const [showOptionsModal, setShowOptionsModal] = useState<boolean>(false);\n  const [showInfoModal, setShowInfoModal] = useState<boolean>(false);\n\n  const showNone = useCallback((force?: boolean) => {\n    if (!correct || force) {\n      setHasShow(false);\n      setShow(Array(settings.totalCount).fill(false));\n    }\n  }, [correct, settings]);\n\n  const showAll = useCallback(() => {\n    setHasShow(false);\n    setShow(Array(settings.totalCount).fill(true));\n  }, [settings]);\n\n  useEffect(() => {\n    if (hasShow) {\n      setTimeout(() => showNone(), TIMEOUT);\n    }\n  }, [hasShow]);\n\n  const clickContainer = useCallback((index: number) => {\n    if (hasShow || typeof index !== 'number') return;\n\n    const newShow = [...show];\n    newShow[index] = true;\n    setShow(newShow);\n    setHasShow(true);\n\n    setCorrect(settings.colors.icons[index] === settings.colors.containers[index]);\n  }, [show, hasShow, settings]);\n\n  const newGame = useCallback(() => {\n    resetGame(settings);\n  }, [settings]);\n\n  const resetGame = useCallback((newSettings: Partial<GameSettings>) => {\n    const newLevel = newSettings.level ?? settings.level;\n    const newTotalCount = DIFFICULTY_LEVEL[newLevel].rowCount * DIFFICULTY_LEVEL[newLevel].colCount;\n    const _newSettings = {\n      ...settings,\n      ...newSettings,\n      colors: getRandomColors(COLORS, newTotalCount),\n    };\n    setSettings(_newSettings);\n    setCorrect(false);\n    showNone(true);\n  }, [settings]);\n\n  const toggleOptionsModal = useCallback(() => {\n    setShowOptionsModal(!showOptionsModal);\n  }, [showOptionsModal]);\n\n  const toggleInfoModal = useCallback(() => {\n    setShowInfoModal(!showInfoModal);\n  }, [showInfoModal]);\n\n  return (\n      <View style={STYLES.container}>\n        <View style={STYLES.north}>\n          <Text style={STYLES.title}>{gameInfo.title}</Text>\n          <View style={STYLES.row}>\n            <Text style={STYLES.optionsDisplay}>\n              <TouchableOpacity style={STYLES.infoIcon} onPress={toggleInfoModal}>\n                <NonClickIcon type=\"MaterialCommunityIcons\" name=\"information-outline\" color={'#fff'} size={30} />\n              </TouchableOpacity>\n\n              <TouchableOpacity onPress={toggleOptionsModal}>\n                <View style={STYLES.row}>\n                  <NonClickIcon style={STYLES.gameIcon} type={gameInfo.icon.type} name={gameInfo.icon.name} color={'#fff'} size={30} />\n                  <LevelIcons icons={DIFFICULTY_LEVEL[settings.level].icons} color={'#fff'} size={30} />\n                </View>\n              </TouchableOpacity>\n            </Text>\n          </View>\n        </View>\n        <View style={STYLES.center}>\n          {correct && (\n              <TouchableOpacity style={STYLES.button} onPress={newGame}>\n                <Text style={STYLES.buttonText}>{gameInfo.playAgain}</Text>\n              </TouchableOpacity>\n          )}\n        </View>\n        <View style={STYLES.south}>\n          {rows.map(r => {\n            return (\n                <View key={r} style={STYLES.row}>\n                  {cols.map(c => {\n                    const index = (r * cols.length) + c;\n                    const iconColor = show[index] ? settings.colors.icons[index] : 'white';\n                    return (\n                        <View key={r+''+c} style={STYLES.cell}>\n                          <NonClickIcon index={index} type={gameInfo.icon.type} name={gameInfo.icon.name} color={iconColor} size={diffLevel.size} />\n                          {correct && <NonClickIcon index={index} type={gameInfo.iconContainer.type} name={gameInfo.iconContainer.name} color={settings.colors.containers[index]} size={diffLevel.size * gameInfo.iconContainer.sizeFactor} />}\n                          {!correct && <ClickIcon index={index} onClick={clickContainer} type={gameInfo.iconContainer.type} name={gameInfo.iconContainer.name} color={settings.colors.containers[index]} size={diffLevel.size * gameInfo.iconContainer.sizeFactor} />}\n                        </View>\n                    )\n                  })}\n                </View>\n            )\n          })}\n        </View>\n        <Modal\n            animationType=\"slide\"\n            transparent\n            visible={showOptionsModal}\n            onRequestClose={toggleOptionsModal}\n        >\n          <View style={STYLES.centeredView}>\n            <View style={STYLES.modalView}>\n              <Text style={STYLES.optionsTitle}>Game Settings:</Text>\n              <View style={STYLES.spaced}>\n                {Object.keys(ICON_GROUP).map(gameName => {\n                  const gameInfo = ICON_GROUP[gameName];\n                  const style = gameName === settings.game ? STYLES.levelSelected : STYLES.levelUnselected;\n                  const iconColor = gameName === settings.game ? '#000' : '#aaa';\n                  return (\n                      <TouchableOpacity key={gameName} onPress={() => {resetGame({game: gameName})}}>\n                        <View style={STYLES.row}>\n                          <NonClickIcon type={gameInfo.icon.type} name={gameInfo.icon.name} color={iconColor} size={30} />\n                          <Text style={style}>&nbsp;&nbsp;{gameInfo.title}</Text>\n                        </View>\n                      </TouchableOpacity>\n                  )\n                })}\n              </View>\n              <View style={STYLES.spaced}>\n                {DIFFICULTY_LEVEL.map((df, i) => {\n                  const selected = settings.level === i;\n                  const style = selected ? STYLES.levelSelected : STYLES.levelUnselected;\n                  return(\n                      <TouchableOpacity key={df.name} onPress={() => {resetGame({level: i})}}>\n                        <View style={STYLES.row}>\n                          <Text style={style}>{df.name}&nbsp;&nbsp;</Text>\n                          <LevelIcons icons={df.icons} color={selected ? '#000' : '#aaa'} size={30} />\n                        </View>\n                      </TouchableOpacity>\n                  );\n                })}\n              </View>\n              <TouchableOpacity style={STYLES.button} onPress={toggleOptionsModal}>\n                <Text style={STYLES.buttonText}>DONE</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n        <Modal\n            animationType=\"slide\"\n            transparent\n            visible={showInfoModal}\n            onRequestClose={toggleInfoModal}\n        >\n          <View style={STYLES.centeredView}>\n            <View style={STYLES.modalView}>\n              <Text style={STYLES.optionsTitle}>How To Play:</Text>\n              <View style={STYLES.spaced}>\n                <Text>\n                  {gameInfo.info}\n                </Text>\n              </View>\n              <TouchableOpacity style={STYLES.button} onPress={toggleInfoModal}>\n                <Text style={STYLES.buttonText}>DONE</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n      </View>\n  );\n}\n\ninterface IconProps {\n  index?: number;\n  name: string;\n  color: string;\n  size: number;\n  style?: any;\n  type?: string;\n  onClick?: (index: number) => void;\n}\n\nconst ClickIcon: FC<IconProps> = (props) => {\n  const { onClick } = props;\n\n  const _onClick = useCallback(() => {\n    onClick?.(props.index);\n  }, [props]);\n\n  return (\n      <TouchableOpacity onPress={_onClick}>\n        {props.type === 'FontAwesome' && <FAIcon {...props} />}\n        {props.type === 'FontAwesome5' && <FA5Icon {...props} />}\n        {props.type === 'MaterialCommunityIcons' && <MCIcon {...props} />}\n      </TouchableOpacity>\n  )\n}\n\nconst NonClickIcon: FC<IconProps> = (props) => {\n  return (\n      <>\n        {props.type === 'FontAwesome' && <FAIcon {...props} />}\n        {props.type === 'FontAwesome5' && <FA5Icon {...props} />}\n        {props.type === 'MaterialCommunityIcons' && <MCIcon {...props} />}\n      </>\n  )\n}\n\nconst FAIcon: FC<IconProps> = (props) => {\n  return (\n      <FontAwesome {...props}  />\n  )\n}\n\nconst FA5Icon: FC<IconProps> = (props) => {\n  return (\n      <FontAwesome5 {...props}  />\n  )\n}\n\nconst MCIcon: FC<IconProps> = (props) => {\n  return (\n      <MaterialCommunityIcons {...props} />\n  )\n}\n\ninterface LevelIconsProps {\n  icons: string[];\n  size: number;\n  color: string;\n}\n\nconst LevelIcons: FC<LevelIconsProps> = memo(props => {\n  const { icons, size, color } = props;\n  return (\n      <>\n        {icons.map((icon, i) => {\n          return <FAIcon key={i} name={icon} color={color} size={size} />;\n        })}\n      </>\n  )\n});\n\nconst getRandomInt = (max: number): number => {\n  return Math.floor(Math.random() * max);\n}\n\nconst getRandomColors = (colors: string[], n: number): GameColors => {\n  const icons = [...colors].sort(() => 0.5 - Math.random()).slice(0, n);\n  let containers = [...icons].sort(() => 0.5 - Math.random());\n  let matches = colorMatches(icons, containers);\n  while (matches !== 1) {\n    containers = [...icons].sort(() => 0.5 - Math.random());\n    matches = colorMatches(icons, containers);\n  }\n  return { icons, containers };\n}\n\nconst colorMatches = (first: string[], second: string[]): number => {\n  return first.filter((x, i) => x === second[i]).length;\n}\n"],"sourceRoot":""}